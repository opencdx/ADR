<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Populate Saved Queries" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(serverName,localhost)}</stringProp>
          <stringProp name="HTTPSampler.port">${__P(serverPort,8085)}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Save BMI Calculation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;BMI Calculation&quot;,&#xd;
  &quot;query&quot;: {&#xd;
    &quot;unitOutput&quot;: &quot;IMPERIAL&quot;,&#xd;
    &quot;queries&quot;: [&#xd;
      {&#xd;
        &quot;formula&quot;: {&#xd;
          &quot;name&quot;: &quot;BMI Calculation&quot;,&#xd;
          &quot;leftOperandFormula&quot;: {&#xd;
            &quot;leftOperand&quot;: &quot;1339a965-5c4d-40a7-b04f-60a17b43455b&quot;,&#xd;
            &quot;leftOperandUnit&quot;: &quot;98999a1c-11b1-4777-a9b6-3b25482676c4&quot;,&#xd;
            &quot;operation&quot;: &quot;DIVIDE&quot;,&#xd;
            &quot;rightOperandFormula&quot;: {&#xd;
              &quot;leftOperand&quot;: &quot;f99f17a3-5248-472d-b88f-f4c894630084&quot;,&#xd;
              &quot;leftOperandUnit&quot;: &quot;01759586-062f-455f-a0c4-23904464b5f4&quot;,&#xd;
              &quot;operation&quot;: &quot;POWER&quot;,&#xd;
              &quot;rightOperandValue&quot;: &quot;2.0&quot;&#xd;
            }&#xd;
          },&#xd;
          &quot;operation&quot;: &quot;MULTIPLY&quot;,&#xd;
          &quot;rightOperandValue&quot;: &quot;703.0&quot;&#xd;
        },&#xd;
        &quot;operation&quot;: &quot;GREATER_THAN&quot;,&#xd;
        &quot;operationDouble&quot;: 30&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/query/save</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Save Grouping Test" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;name&quot;: &quot;Grouping Test&quot;,&#xd;
  &quot;query&quot;: {&#xd;
    &quot;unitOutput&quot;: &quot;IMPERIAL&quot;,&#xd;
    &quot;queries&quot;: [&#xd;
      {&#xd;
        &quot;conceptId&quot;: &quot;9061a0d4-254a-42b2-b786-82e5e9f79661&quot;,&#xd;
        &quot;operation&quot;: &quot;GREATER_THAN&quot;,&#xd;
        &quot;operationDouble&quot;: 30,&#xd;
        &quot;operationUnit&quot;: &quot;d9036e1e-3397-4f00-a40a-021626644970&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;joinOperation&quot;: &quot;OR&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;formula&quot;: {&#xd;
          &quot;name&quot;: &quot;BMI Calculation&quot;,&#xd;
          &quot;leftOperandFormula&quot;: {&#xd;
            &quot;leftOperand&quot;: &quot;1339a965-5c4d-40a7-b04f-60a17b43455b&quot;,&#xd;
            &quot;leftOperandUnit&quot;: &quot;98999a1c-11b1-4777-a9b6-3b25482676c4&quot;,&#xd;
            &quot;operation&quot;: &quot;DIVIDE&quot;,&#xd;
            &quot;rightOperandFormula&quot;: {&#xd;
              &quot;leftOperand&quot;: &quot;f99f17a3-5248-472d-b88f-f4c894630084&quot;,&#xd;
              &quot;leftOperandUnit&quot;: &quot;01759586-062f-455f-a0c4-23904464b5f4&quot;,&#xd;
              &quot;operation&quot;: &quot;POWER&quot;,&#xd;
              &quot;rightOperandValue&quot;: &quot;2.0&quot;&#xd;
            }&#xd;
          },&#xd;
          &quot;operation&quot;: &quot;MULTIPLY&quot;,&#xd;
          &quot;rightOperandValue&quot;: &quot;703.0&quot;&#xd;
        }&#xd;
      },&#xd;
      {&#xd;
        &quot;joinOperation&quot;: &quot;AND&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;group&quot;: [&#xd;
          {&#xd;
            &quot;conceptId&quot;: &quot;f99f17a3-5248-472d-b88f-f4c894630084&quot;,&#xd;
            &quot;operation&quot;: &quot;GREATER_THAN&quot;,&#xd;
            &quot;operationDouble&quot;: 70,&#xd;
            &quot;operationUnit&quot;: &quot;01759586-062f-455f-a0c4-23904464b5f4&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;joinOperation&quot;: &quot;AND&quot;&#xd;
          },&#xd;
          {&#xd;
            &quot;conceptId&quot;: &quot;1339a965-5c4d-40a7-b04f-60a17b43455b&quot;,&#xd;
            &quot;operation&quot;: &quot;GREATER_THAN&quot;,&#xd;
            &quot;operationDouble&quot;: 250,&#xd;
            &quot;operationUnit&quot;: &quot;98999a1c-11b1-4777-a9b6-3b25482676c4&quot;&#xd;
          }&#xd;
        ]&#xd;
      }&#xd;
    ]&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/query/save</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Saved Queries" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/query/list</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Populate ADR" enabled="true">
        <stringProp name="ThreadGroup.num_threads">${__P(noThreads,1)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(rampUp,0)}</stringProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <stringProp name="LoopController.loops">${__P(lCount,1)}</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
        <boolProp name="ThreadGroup.delayedStart">false</boolProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Concept Setup" enabled="true">
          <stringProp name="BeanShellSampler.query">vars.put(&quot;UNIT_METER&quot;,&quot;258669008 | meter (qualifier value)&quot;);
vars.put(&quot;UNIT_INCH&quot;,&quot;258677007 | inch (qualifier value)&quot;);
vars.put(&quot;UNIT_POUNDS&quot;,&quot;258693003 | pounds (qualifier value)&quot;);
vars.put(&quot;UNIT_KILOGRAMS&quot;,&quot;258683005 | kilogram (qualifier value)&quot;);
vars.put(&quot;UNIT_METER&quot;,&quot;258669008 | meter (qualifier value)&quot;);
vars.put(&quot;UNIT_INCH&quot;,&quot;258677007 | inch (qualifier value)&quot;);
vars.put(&quot;UNIT_POUNDS&quot;,&quot;258693003 | pounds (qualifier value)&quot;);
vars.put(&quot;UNIT_KILOGRAMS&quot;,&quot;258683005 | kilogram (qualifier value)&quot;);
vars.put(&quot;UNIT_SECONDS&quot;,&quot;257997001 | Seconds (qualifier value)&quot;);



vars.put(&quot;ANF_MAN&quot;,&quot;339947000 | Man (person)&quot;);
vars.put(&quot;ANF_WOMAN&quot;,&quot;224526002 | Woman (person)&quot;);
vars.put(&quot;ANF_NEGATIVE&quot;,&quot;260385009 | Negative (qualifier value)&quot;);
vars.put(&quot;ANF_NOT_DETECTED&quot;,&quot;260415000 | Not Detected (qualifier value)&quot;);
vars.put(&quot;ANF_POSITIVE&quot;,&quot;10828004 | Positive (qualifier value)&quot;);
vars.put(&quot;ANF_PRESUMPTIVE_POSITIVE&quot;,&quot;720735008 | Presumptive Positive (qualifier value)&quot;);
vars.put(&quot;ANF_NORMAL_BMI&quot;,&quot;35425004 | Normal body mass index (finding)&quot;);
vars.put(&quot;ANF_PATIENT&quot;,&quot;116154003 | Patient (person)&quot;);
vars.put(&quot;ANF_FAMILY_DOCTOR&quot;,&quot;62247001 | Family medicine specialist (occupation)&quot;);
vars.put(&quot;ANF_EVAL_PROCEDURE&quot;,&quot;386053000 | Evaluation procedure (procedure)&quot;);
vars.put(&quot;ANF_EVAL_FINDING&quot;,&quot;441742003 | Evaluation finding (finding)&quot;);
vars.put(&quot;ANF_RASH&quot;,&quot;723010005 | Acute eruption of skin (disorder)&quot;);
vars.put(&quot;ANF_AGE&quot;,&quot;397669002 | Age (qualifier value)&quot;);
vars.put(&quot;ANF_AGE_DIAGNOSIS&quot;,&quot;423493009 | Age at diagnosis (observable entity)&quot;);
vars.put(&quot;ANF_HEIGHT&quot;,&quot;153637007 | Body height (observable entity)&quot;);
vars.put(&quot;ANF_BMI&quot;,&quot;60621009 | Body mass index (observable entity)&quot;);
vars.put(&quot;ANF_OVERWEIGHT_BMI&quot;,&quot;162863004 | Body mass index 25-29 - overweight (finding)&quot;);
vars.put(&quot;ANF_OBESE_BMI&quot;,&quot;162864005 | Body mass index 30+ - obesity (finding)&quot;);
vars.put(&quot;ANF_LOW_BMI&quot;,&quot;310252000 | Body mass index less than 20 (finding)&quot;);
vars.put(&quot;ANF_WEIGHT&quot;,&quot;27113001 | Body weight (observable entity)&quot;);
vars.put(&quot;ANF_CHRONIC_LUNG_DISEASE&quot;,&quot;413839001 | Chronic lung disease (disorder)&quot;);
vars.put(&quot;ANF_CHRONIC_LUNG_DISEASE_DISORDER&quot;,&quot;707534000 | Chronic lung disease due to surfactant disorder (disorder)&quot;);
vars.put(&quot;ANF_DATE_OF_BIRTH&quot;,&quot;184099003 | Date of birth (observable entity)&quot;);
vars.put(&quot;ANF_DATE_OF_ONSET&quot;,&quot;298059007 | Date of onset (observable entity)&quot;);
vars.put(&quot;ANF_DETECTED&quot;,&quot;260373001 | Detected (qualifier value)&quot;);
vars.put(&quot;ANF_HISTORY_OF_CLD&quot;,&quot;414415007 | History of chronic lung disease (situation)&quot;);
vars.put(&quot;ANF_INVALID&quot;,&quot;455371000124106 | Invalid result (qualifier value)&quot;);

vars.put(&quot;ANF_ACUTE_ERUPTION&quot;,&quot;72301000510005 | Acute eruption of skin (disorder)&quot;);
vars.put(&quot;ANF_ACUTE_DESQUAMMATING&quot;,&quot;721543007 | Acute desquamating eruption of skin (disorder)&quot;);
vars.put(&quot;ANF_ACUTE_EXUDATIVE&quot;,&quot;723014001 | Acute exudative skin eruption (disorder)&quot;);
vars.put(&quot;ANF_ACUTE_MACUOPAPULAR&quot;,&quot;723012002 | Acute maculopapular eruption of skin (disorder)&quot;);
vars.put(&quot;ANF_ACUTE_PURPURIC&quot;,&quot;723011009 | Acute purpuric eruption of skin (disorder)&quot;);</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Doctors" enabled="true">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">jmeter/datasetDoctors.csv</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="variableNames">practitionerID,practitionerIdentifier,practitionerDisplay,practitionerReference,practitionerUri,practitionerCodeExpression</stringProp>
        </CSVDataSet>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Patient Setup" enabled="true">
          <stringProp name="BeanShellSampler.query">
String jMUUID = &quot;${__UUID}&quot;;
int ageT = ${__Random(1,100)};
float heightT = ${__Random(54,84)};
float weightT = ${__Random(100,350)};
float bmiT = (weightT / (heightT * heightT)) * 703;

vars.put(&quot;nationalHealthID&quot;,jMUUID);

vars.put(&quot;age&quot;,Integer.toString(ageT));
vars.put(&quot;height&quot;,Float.toString(heightT));
vars.put(&quot;weight&quot;,Float.toString(weightT));
vars.put(&quot;bmi&quot;,Float.toString(bmiT));</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${__P(serverName,localhost)}</stringProp>
          <stringProp name="HTTPSampler.port">${__P(serverPort,8085)}</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
        </ConfigTestElement>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/json</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">${__P(threadDelay,50)}</stringProp>
        </ConstantTimer>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="ANF Statement Setup" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.util.Date;
import java.util.Random;
import java.text.SimpleDateFormat;

// Set the start date (January 1, 2019)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
Date startDate = dateFormat.parse(&quot;2019-01-01&quot;);

// Get the current date
Date currentDate = new Date();

// Calculate the difference in milliseconds between the current date and the start date
long diffInMillies = currentDate.getTime() - startDate.getTime();

// Generate a random number of milliseconds within this range
Random random = new Random();
long randomMillisSinceEpoch = startDate.getTime() + (long)(random.nextDouble() * diffInMillies);

// Create a Date object with the random milliseconds
Date randomDate = new Date(randomMillisSinceEpoch);

// Get the epoch seconds for the random date as a double
double randomDateEpochSeconds = randomDate.getTime() / 1000.0;

// Store the random epoch seconds in a JMeter variable
vars.put(&quot;anfSubmissionDate&quot;, Double.toString(randomDateEpochSeconds));
// Calculate the time range (12 hours in seconds)
int twelveHoursInSeconds = 12 * 60 * 60;
// Generate a random time within the last 12 hours
double randomSecondsBefore = (double)(new Random().nextInt(twelveHoursInSeconds));
// Calculate the random date in seconds before the specified epoch time
double randomDateSeconds = randomDateEpochSeconds - randomSecondsBefore;
// Assign the random seconds to a JMeter variable
vars.put(&quot;performanceCircumstanceTiming&quot;, Double.toString(randomDateSeconds));


String anfId = &quot;${__UUID}&quot;;
vars.put(&quot;anf_id&quot;,anfId);</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Age Options" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_AGE_DIAGNOSIS}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_AGE_DIAGNOSIS}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_AGE_DIAGNOSIS}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${age},&#xd;
       &quot;lowerBound&quot; : ${age},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;258707000 | year (qualifier value)&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_AGE}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_AGE}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_AGE}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${age},&#xd;
       &quot;lowerBound&quot; : ${age},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;258707000 | year (qualifier value)&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="ANF Statement Setup" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.util.Date;
import java.util.Random;
import java.text.SimpleDateFormat;

// Set the start date (January 1, 2019)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
Date startDate = dateFormat.parse(&quot;2019-01-01&quot;);

// Get the current date
Date currentDate = new Date();

// Calculate the difference in milliseconds between the current date and the start date
long diffInMillies = currentDate.getTime() - startDate.getTime();

// Generate a random number of milliseconds within this range
Random random = new Random();
long randomMillisSinceEpoch = startDate.getTime() + (long)(random.nextDouble() * diffInMillies);

// Create a Date object with the random milliseconds
Date randomDate = new Date(randomMillisSinceEpoch);

// Get the epoch seconds for the random date as a double
double randomDateEpochSeconds = randomDate.getTime() / 1000.0;

// Store the random epoch seconds in a JMeter variable
vars.put(&quot;anfSubmissionDate&quot;, Double.toString(randomDateEpochSeconds));
// Calculate the time range (12 hours in seconds)
int twelveHoursInSeconds = 12 * 60 * 60;
// Generate a random time within the last 12 hours
double randomSecondsBefore = (double)(new Random().nextInt(twelveHoursInSeconds));
// Calculate the random date in seconds before the specified epoch time
double randomDateSeconds = randomDateEpochSeconds - randomSecondsBefore;
// Assign the random seconds to a JMeter variable
vars.put(&quot;performanceCircumstanceTiming&quot;, Double.toString(randomDateSeconds));


String anfId = &quot;${__UUID}&quot;;
vars.put(&quot;anf_id&quot;,anfId);</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <GenericController guiclass="LogicControllerGui" testclass="GenericController" testname="BMI Options" enabled="true"/>
        <hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="BMI &gt;= 30" enabled="true">
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
            <stringProp name="IfController.condition">${__jexl3(${bmi} &gt;= 30.0)}</stringProp>
          </IfController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="BMI &gt;= 30 Options " enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${bmi},&#xd;
       &quot;lowerBound&quot; : ${bmi},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="162864005 | Body mass index 30+ - obesity (finding)" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;162864005 | Body mass index 30+ - obesity (finding)&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;162864005 | Body mass index 30+ - obesity (finding)&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : &quot;Infinity&quot;,&#xd;
       &quot;lowerBound&quot; : ${bmi},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="162864005 | Body mass index 30+ - obesity (finding)" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;162864005 | Body mass index 30+ - obesity (finding)&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;162864005 | Body mass index 30+ - obesity (finding)&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : &quot;Infinity&quot;,&#xd;
       &quot;lowerBound&quot; : 30.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="BMI &gt;= 25.0 &amp;&amp; BMI &lt; 30.0" enabled="true">
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
            <stringProp name="IfController.condition">${__jexl3(${bmi} &gt;= 25.0 &amp;&amp; ${bmi} &lt; 30.0)}</stringProp>
          </IfController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="BMI &gt;= 25.0 &amp;&amp; BMI &lt; 30.0 Options " enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${bmi},&#xd;
       &quot;lowerBound&quot; : ${bmi},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_OVERWEIGHT_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_OVERWEIGHT_BMI}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_OVERWEIGHT_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${bmi},&#xd;
       &quot;lowerBound&quot; : ${bmi},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_OVERWEIGHT_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_OVERWEIGHT_BMI}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_OVERWEIGHT_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 29.9,&#xd;
       &quot;lowerBound&quot; : 25.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="BMI &gt;= 20.0 &amp;&amp; BMI &lt; 25.0" enabled="true">
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
            <stringProp name="IfController.condition">${__jexl3(${bmi} &gt;= 20.0 &amp;&amp; ${bmi} &lt; 25.0)}</stringProp>
          </IfController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="BMI &gt;= 20.0 &amp;&amp; BMI &lt; 25.0 Options " enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${bmi},&#xd;
       &quot;lowerBound&quot; : ${bmi},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 25.0,&#xd;
       &quot;lowerBound&quot; : 20.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="BMI &lt; 20.0" enabled="true">
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
            <stringProp name="IfController.condition">${__jexl3(${bmi} &lt; 20.0)}</stringProp>
          </IfController>
          <hashTree>
            <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="BMI &lt; 20.0" enabled="true">
              <intProp name="InterleaveControl.style">1</intProp>
            </RandomController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${bmi},&#xd;
       &quot;lowerBound&quot; : ${bmi},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_LOW_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;310252000 | Body mass index less than 20 (finding))&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_LOW_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${bmi},&#xd;
       &quot;lowerBound&quot; : 0.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_LOW_BMI}" enabled="true">
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_LOW_BMI}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_LOW_BMI}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${bmi},&#xd;
       &quot;lowerBound&quot; : ${bmi},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${ANF_BMI}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
                <stringProp name="HTTPSampler.path">/anf</stringProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
                <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
                <boolProp name="HTTPSampler.image_parser">false</boolProp>
                <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
                <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
                <boolProp name="HTTPSampler.md5">false</boolProp>
                <intProp name="HTTPSampler.ipSourceType">0</intProp>
              </HTTPSamplerProxy>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="ANF Statement Setup" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.util.Date;
import java.util.Random;
import java.text.SimpleDateFormat;

// Set the start date (January 1, 2019)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
Date startDate = dateFormat.parse(&quot;2019-01-01&quot;);

// Get the current date
Date currentDate = new Date();

// Calculate the difference in milliseconds between the current date and the start date
long diffInMillies = currentDate.getTime() - startDate.getTime();

// Generate a random number of milliseconds within this range
Random random = new Random();
long randomMillisSinceEpoch = startDate.getTime() + (long)(random.nextDouble() * diffInMillies);

// Create a Date object with the random milliseconds
Date randomDate = new Date(randomMillisSinceEpoch);

// Get the epoch seconds for the random date as a double
double randomDateEpochSeconds = randomDate.getTime() / 1000.0;

// Store the random epoch seconds in a JMeter variable
vars.put(&quot;anfSubmissionDate&quot;, Double.toString(randomDateEpochSeconds));
// Calculate the time range (12 hours in seconds)
int twelveHoursInSeconds = 12 * 60 * 60;
// Generate a random time within the last 12 hours
double randomSecondsBefore = (double)(new Random().nextInt(twelveHoursInSeconds));
// Calculate the random date in seconds before the specified epoch time
double randomDateSeconds = randomDateEpochSeconds - randomSecondsBefore;
// Assign the random seconds to a JMeter variable
vars.put(&quot;performanceCircumstanceTiming&quot;, Double.toString(randomDateSeconds));


String anfId = &quot;${__UUID}&quot;;
vars.put(&quot;anf_id&quot;,anfId);</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Weight Options" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_WEIGHT}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_WEIGHT}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_WEIGHT}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${weight},&#xd;
       &quot;lowerBound&quot; : ${weight},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_POUNDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="ANF Statement Setup" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.util.Date;
import java.util.Random;
import java.text.SimpleDateFormat;

// Set the start date (January 1, 2019)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
Date startDate = dateFormat.parse(&quot;2019-01-01&quot;);

// Get the current date
Date currentDate = new Date();

// Calculate the difference in milliseconds between the current date and the start date
long diffInMillies = currentDate.getTime() - startDate.getTime();

// Generate a random number of milliseconds within this range
Random random = new Random();
long randomMillisSinceEpoch = startDate.getTime() + (long)(random.nextDouble() * diffInMillies);

// Create a Date object with the random milliseconds
Date randomDate = new Date(randomMillisSinceEpoch);

// Get the epoch seconds for the random date as a double
double randomDateEpochSeconds = randomDate.getTime() / 1000.0;

// Store the random epoch seconds in a JMeter variable
vars.put(&quot;anfSubmissionDate&quot;, Double.toString(randomDateEpochSeconds));
// Calculate the time range (12 hours in seconds)
int twelveHoursInSeconds = 12 * 60 * 60;
// Generate a random time within the last 12 hours
double randomSecondsBefore = (double)(new Random().nextInt(twelveHoursInSeconds));
// Calculate the random date in seconds before the specified epoch time
double randomDateSeconds = randomDateEpochSeconds - randomSecondsBefore;
// Assign the random seconds to a JMeter variable
vars.put(&quot;performanceCircumstanceTiming&quot;, Double.toString(randomDateSeconds));


String anfId = &quot;${__UUID}&quot;;
vars.put(&quot;anf_id&quot;,anfId);</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Height Options" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1153637007 | Body height (observable entity))" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_HEIGHT}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_HEIGHT}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : ${height},&#xd;
       &quot;lowerBound&quot; : ${height},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_INCH}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="ANF Statement Setup" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.util.Date;
import java.util.Random;
import java.text.SimpleDateFormat;

// Set the start date (January 1, 2019)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
Date startDate = dateFormat.parse(&quot;2019-01-01&quot;);

// Get the current date
Date currentDate = new Date();

// Calculate the difference in milliseconds between the current date and the start date
long diffInMillies = currentDate.getTime() - startDate.getTime();

// Generate a random number of milliseconds within this range
Random random = new Random();
long randomMillisSinceEpoch = startDate.getTime() + (long)(random.nextDouble() * diffInMillies);

// Create a Date object with the random milliseconds
Date randomDate = new Date(randomMillisSinceEpoch);

// Get the epoch seconds for the random date as a double
double randomDateEpochSeconds = randomDate.getTime() / 1000.0;

// Store the random epoch seconds in a JMeter variable
vars.put(&quot;anfSubmissionDate&quot;, Double.toString(randomDateEpochSeconds));
// Calculate the time range (12 hours in seconds)
int twelveHoursInSeconds = 12 * 60 * 60;
// Generate a random time within the last 12 hours
double randomSecondsBefore = (double)(new Random().nextInt(twelveHoursInSeconds));
// Calculate the random date in seconds before the specified epoch time
double randomDateSeconds = randomDateEpochSeconds - randomSecondsBefore;
// Assign the random seconds to a JMeter variable
vars.put(&quot;performanceCircumstanceTiming&quot;, Double.toString(randomDateSeconds));


String anfId = &quot;${__UUID}&quot;;
vars.put(&quot;anf_id&quot;,anfId);</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Gender Options" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_WOMAN}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_WOMAN}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_WOMAN}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 1.0,&#xd;
       &quot;lowerBound&quot; : 1.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_MAN}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_MAN}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_MAN}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 1.0,&#xd;
       &quot;lowerBound&quot; : 1.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="ANF Statement Setup" enabled="true">
          <stringProp name="BeanShellSampler.query">import java.util.Date;
import java.util.Random;
import java.text.SimpleDateFormat;

// Set the start date (January 1, 2019)
SimpleDateFormat dateFormat = new SimpleDateFormat(&quot;yyyy-MM-dd&quot;);
Date startDate = dateFormat.parse(&quot;2019-01-01&quot;);

// Get the current date
Date currentDate = new Date();

// Calculate the difference in milliseconds between the current date and the start date
long diffInMillies = currentDate.getTime() - startDate.getTime();

// Generate a random number of milliseconds within this range
Random random = new Random();
long randomMillisSinceEpoch = startDate.getTime() + (long)(random.nextDouble() * diffInMillies);

// Create a Date object with the random milliseconds
Date randomDate = new Date(randomMillisSinceEpoch);

// Get the epoch seconds for the random date as a double
double randomDateEpochSeconds = randomDate.getTime() / 1000.0;

// Store the random epoch seconds in a JMeter variable
vars.put(&quot;anfSubmissionDate&quot;, Double.toString(randomDateEpochSeconds));
// Calculate the time range (12 hours in seconds)
int twelveHoursInSeconds = 12 * 60 * 60;
// Generate a random time within the last 12 hours
double randomSecondsBefore = (double)(new Random().nextInt(twelveHoursInSeconds));
// Calculate the random date in seconds before the specified epoch time
double randomDateSeconds = randomDateEpochSeconds - randomSecondsBefore;
// Assign the random seconds to a JMeter variable
vars.put(&quot;performanceCircumstanceTiming&quot;, Double.toString(randomDateSeconds));


String anfId = &quot;${__UUID}&quot;;
vars.put(&quot;anf_id&quot;,anfId);</stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <RandomController guiclass="RandomControlGui" testclass="RandomController" testname="Rash Options" enabled="true">
          <intProp name="InterleaveControl.style">1</intProp>
        </RandomController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_ACUTE_ERUPTION}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_ERUPTION}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_ERUPTION}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 1.0,&#xd;
       &quot;lowerBound&quot; : 1.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_ACUTE_DESQUAMMATING}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_DESQUAMMATING}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_DESQUAMMATING}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 1.0,&#xd;
       &quot;lowerBound&quot; : 1.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_ACUTE_EXUDATIVE}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_EXUDATIVE}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_EXUDATIVE}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 1.0,&#xd;
       &quot;lowerBound&quot; : 1.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_ACUTE_MACUOPAPULAR}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_MACUOPAPULAR}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_MACUOPAPULAR}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 1.0,&#xd;
       &quot;lowerBound&quot; : 1.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${ANF_ACUTE_PURPURIC}" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
   &quot;id&quot; : &quot;${anf_id}&quot;,&#xd;
   &quot;time&quot; : {&#xd;
     &quot;upperBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;lowerBound&quot; : ${anfSubmissionDate},&#xd;
     &quot;includeUpperBound&quot; : true,&#xd;
     &quot;includeLowerBound&quot; : true,&#xd;
     &quot;semantic&quot; : {&#xd;
       &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
     },&#xd;
     &quot;resolution&quot; : 1.0&#xd;
   },&#xd;
   &quot;subjectOfRecord&quot; : {&#xd;
     &quot;id&quot; : &quot;${nationalHealthID}&quot;,&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
     }&#xd;
   },&#xd;
   &quot;authors&quot; : [ {&#xd;
     &quot;id&quot; : ${practitionerID},&#xd;
     &quot;practitionerValue&quot; : {&#xd;
       &quot;identifier&quot; : ${practitionerIdentifier},&#xd;
       &quot;display&quot; : ${practitionerDisplay},&#xd;
       &quot;reference&quot; : ${practitionerReference},&#xd;
       &quot;uri&quot; : ${practitionerUri}&#xd;
     },&#xd;
     &quot;code&quot; : {&#xd;
       &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
     }&#xd;
   } ],&#xd;
   &quot;subjectOfInformation&quot; : {&#xd;
     &quot;expression&quot; : &quot;116154003 | Patient (person)&quot;&#xd;
   },&#xd;
   &quot;associatedStatement&quot; : [ ],&#xd;
   &quot;topic&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_PURPURIC}&quot;&#xd;
   },&#xd;
   &quot;type&quot; : {&#xd;
     &quot;expression&quot; : &quot;${ANF_ACUTE_PURPURIC}&quot;&#xd;
   },&#xd;
   &quot;performanceCircumstance&quot; : {&#xd;
     &quot;timing&quot; : {&#xd;
       &quot;upperBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;lowerBound&quot; : ${performanceCircumstanceTiming},&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;semantic&quot; : {&#xd;
         &quot;expression&quot; : &quot;${UNIT_SECONDS}&quot;&#xd;
       },&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;purpose&quot; : [ {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_PROCEDURE}&quot;&#xd;
     } ],&#xd;
     &quot;status&quot; : {&#xd;
       &quot;expression&quot; : &quot;${ANF_EVAL_FINDING}&quot;&#xd;
     },&#xd;
     &quot;result&quot; : {&#xd;
       &quot;upperBound&quot; : 1.0,&#xd;
       &quot;lowerBound&quot; : 1.0,&#xd;
       &quot;includeUpperBound&quot; : true,&#xd;
       &quot;includeLowerBound&quot; : true,&#xd;
       &quot;resolution&quot; : 1.0&#xd;
     },&#xd;
     &quot;participant&quot; : [ {&#xd;
       &quot;id&quot; : ${practitionerID},&#xd;
       &quot;code&quot; : {&#xd;
         &quot;expression&quot; : ${practitionerCodeExpression}&#xd;
       }&#xd;
     } ],&#xd;
     &quot;deviceid&quot; : [ ]&#xd;
   },&#xd;
   &quot;status&quot; : &quot;STATUS_UNSPECIFIED&quot;&#xd;
 }</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.path">/anf</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="NOOP" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.path">/query</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
            <boolProp name="HTTPSampler.image_parser">false</boolProp>
            <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
            <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
            <boolProp name="HTTPSampler.md5">false</boolProp>
            <intProp name="HTTPSampler.ipSourceType">0</intProp>
          </HTTPSamplerProxy>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/query [GET]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.path">/query</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="RespTimeGraphVisualizer" testclass="ResultCollector" testname="Response Time Graph" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
